Given a singly linked list L: L0→L1→…→Ln-1→Ln,
reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…

You may not modify the values in the list's nodes, only nodes itself may be changed.

Example 1:

Given 1->2->3->4, reorder it to 1->4->2->3.
Example 2:

Given 1->2->3->4->5, reorder it to 1->5->2->4->3.


using stack?

1. 1->2->3->4, head 1, curr 1: has next											    head None: return None
2. 1->2->3->4, head 1, curr 2: has next										 head None: return None
3. 1->2->3->4, head 1, curr 3: has next             head 2, head.next == curr.next: curr.next = none 1->4->2->3  return None       
4. 1->2->3->4, head 1, curr 4: 1->4->2->3->4 return head 2

Note: use stack return cnt, max_cnt to check if finished.

   

